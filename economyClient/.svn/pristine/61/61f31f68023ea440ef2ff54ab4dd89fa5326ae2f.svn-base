<template>
	<view class="layout">
		<mescroll-uni @down="downCallBack" @init ="initMescroll" @up="upCallback" top="80">
			<view v-for="(item,index) in wonderfulList" :key="index">
				<view v-if="!item.thumbnailPath" class="consult-top" @tap="goWonderfulDetail(item.wonderfulId)">
					<view class="consult-top-content">
						<view class="consult-title wonder-mulit-limit">{{item.title}}</view>
						<view>
							<text class="consult-news font-12">{{item.authorName}}</text>
							<text class="consult-date font-10">{{item.createTime}}</text>
						</view>
					</view>
				</view>
				<view v-if="item.thumbnailPath && item.syncFlag == 1" class="main-show" @tap="goWonderfulDetail(item.wonderfulId)">
					<view class="consult-main-content">
						<view class="list-describe font-weight-600 wonder-mulit-limit">{{item.title}}</view>
						<image class="consult-main-image box-shadow" :src="item.thumbnailPath" mode="widthFix"></image>
						<view>
							<text class="consult-news font-12">{{item.authorName}}</text>
							<text class="consult-date font-10">{{item.createTime}}</text>
						</view>
					</view>
				</view>
				<view v-if="item.thumbnailPath && item.syncFlag == 2" class="consult-list" @tap="goWonderfulDetail(item.wonderfulId)">
					<view class="consult-list-dis">
						<view class="consult-list-left">
							<view class="list-describe font-weight-600 multiline-limit-length">{{item.title}}</view>
							<view class="consult-base">
								<text class="list-mark">{{item.authorName}}</text>
								<text class="list-date">{{item.createTime}}</text>
							</view>
						</view>
						<image class="consult-list-right" :src="item.thumbnailPath"></image>
					</view>
				</view>
				
			</view>
		</mescroll-uni>
	</view>
	<!-- 列表结束 -->
</template>

<script>
	export default {
		data() {
			return {
				mescroll:'',
				wonderfulList:[],
				infoSwiperList:[]
			}
		},
		methods: {
			initMescroll(mescroll){
				this.mescroll = mescroll;
			},
			downCallBack(mescroll)
			{
				this.wonderfulList=[];
				mescroll.resetUpScroll();
			},
			upCallback(mescroll)
			{
				//获取项目信息列表
				const url = '/memberapi/api/wonderful/list.do';
				let data = {
					pageNo: mescroll.num,
					pageSize: mescroll.size,
				};
				var that = this;
				this.request.get(url,data,mescroll).then(res=>{
					let currListData = res.list;
					currListData.forEach((item,index) => {
						if(item.thumbnailPath){
							item.thumbnailPath = this.util.formatImagePath(item.thumbnailPath);
						}

						if(item.createTime){
							item.createTime = item.createTime.toString().substring(0,10);
						}
					});
					//查出来的列表排除前两条后循环显示
					this.wonderfulList = this.wonderfulList.concat(currListData); //追加新数据
				})
			},
			goWonderfulDetail:function(wonderfulId){
				uni.navigateTo({
					url:'wonderfulDetail?wonderfulId='+wonderfulId
				})
			}
		}
	}
</script>

<style>
	@import url("../../common/css/app_new.css");
	@import url("../../common/css/app.css");
	@import url("../../common/css/wonderful.css");
</style>
